apply plugin: 'com.android.application'

apply from: '../versioning.gradle'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId 'ru.semkin.ivan.parttime'
        minSdkVersion 22
        targetSdkVersion 27
        versionCode buildVersionCode()
        versionName version
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
        buildConfigField 'boolean', 'TIMBER_ENABLE', 'true'

        if (rootProject.file('appKeys.properties').exists()) {
            def apiKeysPropertiesFile = rootProject.file("appKeys.properties")
            def apiKeysProperties = new Properties()
            apiKeysProperties.load(new FileInputStream(apiKeysPropertiesFile))

            resValue('integer', 'com_vk_sdk_AppId', apiKeysProperties.get("com_vk_sdk_AppId"))
        } else {
            throw new GradleException("You must have appKeys.properties in the root folder of your project with " +
                    "com_vk_sdk_AppId" +
                    " variables set in order to build the project")
        }
    }

    signingConfigs {
        release {
            if (rootProject.file('keystore.properties').exists()) {
                def keystorePropertiesFile = rootProject.file('keystore.properties')
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            buildConfigField 'boolean', 'TIMBER_ENABLE', 'false'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (rootProject.file('keystore.properties').exists()) {
                signingConfig signingConfigs.release
            }
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    def supportLibraryVersion = '27.1.1'
    def butterknifeVersion = '8.6.0'
    def glideVersion = '4.7.1'
    def room_version = '1.1.0'
    def leakCanaryVersion = '1.5.4'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"

    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.jakewharton.timber:timber:4.7.0'
    implementation 'com.heinrichreimersoftware:material-intro:1.6.2'
    implementation 'com.vk:androidsdk:1.6.9'

    implementation 'com.android.support:support-v4:27.1.1'
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    testImplementation "android.arch.persistence.room:testing:$room_version"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
